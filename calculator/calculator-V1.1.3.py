# -*- coding: utf-8 -*-
"""
@author: mastercoder1323
some error messages were generated by Gemini AI [https://gemini.google.com/app/']
"""

from tkinter import *
from functions import *
import pygame
import os

# Start the Mixer for sound and initialize sound path
pygame.mixer.init()
filename = os.path.join("assets", "clap.wav")
pygame.mixer.music.load(filename)

# Make Window
window = Tk()
window.wm_iconbitmap("main.ico")
window.title("MC1323 Calculator V1.1.3")
window.geometry("400x500")
# Title
titleFrame = Frame(border=5, bg='black')
title = Label(
    titleFrame,
    text="Welcome to MC1323 Calculator",
    bg = 'black',
    fg = 'white',
    font=("Arial", 15)
)
title.pack(side=LEFT)
exitB=Button(titleFrame, text='X', bg='black', fg='white', font=("Arial", 15), command=window.destroy).pack(side=RIGHT)
titleFrame.pack(fill=X, side=TOP)
# Num Entry In Its Frame
numFrame = Frame(border=5)
num1 = Entry(
    width = 15,
    master=numFrame
)
num2 = Entry(
    width = 15,
    master=numFrame
)
Label(
    text='First Number:',
    master=numFrame
).pack(side=LEFT)
num1.pack(side=LEFT)
num2.pack(side=RIGHT)
Label(
    text='Second Number:',
    master=numFrame
).pack(side=RIGHT)
numFrame.pack(fill=X)

# Options
options = Frame()
Label(options,text='Options:', font=('Ariel', 12, 'bold')).pack(side=TOP)
accumulate = IntVar()
Checkbutton(
    options,
    border=5,
    text="Accumulate",  # Label displayed near the checkbox
    variable=accumulate,  # Link the checkbox to the variable
    onvalue=1,  # Set value to 1 when checked
    offvalue=0,  # Set value to 0 when unchecked
).pack(side=LEFT)
inverse = IntVar()
Checkbutton(
    options,
    border=5,
    text="Inverse Function",  # Label displayed near the checkbox
    variable=inverse,  # Link the checkbox to the variable
    onvalue=1,  # Set value to 1 when checked
    offvalue=0,  # Set value to 0 when unchecked
).pack(side=LEFT)

# Result
result = Text(wrap=WORD)

# Buttons & Their Functions & Their Frame
btnFrame = Frame(borderwidth=10)
btnFrame2 = Frame(borderwidth=10)
def setResults(results):
    result.insert(END, results[0])
    result.see(END)
    if accumulate.get():
        if results[1]:
            num1.delete(0, END)
            num1.insert(0, results[1])
    pygame.mixer.music.play()
def operation(function):
    results = function(num1,num2)
    setResults(results)
def func(function):
    results = function(num1,num2, inverse)
    setResults(results)
def addButton(text1, function1, master1, function2):
    def func():
        function2(function1)
    Button(master=master1,text=text1, command=func).pack(side=LEFT, expand=True)

addButton('Add',addition,btnFrame, operation)
addButton('Subtract',subtraction,btnFrame, operation)
addButton('Multiply',multiplication,btnFrame, operation)
addButton('Divide',division,btnFrame, operation)
addButton('Exponent',exponent,btnFrame, operation)
addButton('Root',rooting,btnFrame, operation)
addButton('Sine',sine,btnFrame2, func)
addButton('Cosine',cosine,btnFrame2, func)
addButton('Tangent',tangent,btnFrame2, func)
addButton('Logarithm (SecondNumber for log10())',logarithem,btnFrame2, func)
btnFrame.pack(side=TOP, fill=X)
btnFrame2.pack(side=TOP, fill=X)
options.pack(side = TOP)
result.pack(fill=X, side=TOP)
window.mainloop()
